<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tongfu.dao.AdIncomeDao" >
  <resultMap id="BaseResultMap" type="com.tongfu.entity.AdIncome" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="ad_id" property="adId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, create_date, price, ad_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from tf_ad_income
    where id = #{id,jdbcType=BIGINT}
  </select>

  <!--本月或上月 0代表本月 1代表上月-->
  <select id="getMonthCountAdPrice" parameterType="java.util.HashMap" resultType="java.util.Map">
    SELECT A.this_ad_price,B.last_ad_price, COALESCE( CONCAT(ROUND((A.this_ad_price-B.last_ad_price)/B.last_ad_price*100,2),'%'),0)  AS rise_or_fall_ad FROM
    (SELECT COALESCE(SUM(price),0) this_ad_price FROM tf_ad_income WHERE PERIOD_DIFF( DATE_FORMAT( NOW( ) , '%Y%m' ) , DATE_FORMAT( create_date, '%Y%m' ) ) =0) A,
    (SELECT COALESCE(SUM(price),0) last_ad_price FROM tf_ad_income WHERE PERIOD_DIFF( DATE_FORMAT( NOW( ) , '%Y%m' ) , DATE_FORMAT( create_date, '%Y%m' ) ) =1 )B
  </select>

  <!--本周或上周0代表本周 1 代表上周-->
  <select id="getWeekCountAdPrice" parameterType="java.util.HashMap" resultType="java.util.Map">
    SELECT A.this_ad_price,B.last_ad_price, COALESCE( CONCAT(ROUND((A.this_ad_price-B.last_ad_price)/B.last_ad_price*100,2),'%'),0)  AS rise_or_fall_ad FROM
    (SELECT COALESCE(SUM(price),0) this_ad_price FROM tf_ad_income WHERE YEARWEEK(DATE_FORMAT(create_date,'%Y-%m-%d'),1) = YEARWEEK(NOW(),0)) A,
    (SELECT COALESCE(SUM(price),0) last_ad_price FROM tf_ad_income WHERE YEARWEEK(DATE_FORMAT(create_date,'%Y-%m-%d'),1) = YEARWEEK(NOW(),1) )B
  </select>

  <!--今天或昨天 1代表昨天  0代表今天-->
  <select id="getDayCountAdPrice" parameterType="java.util.HashMap" resultType="java.util.Map">
    SELECT A.this_ad_price,B.last_ad_price, COALESCE( CONCAT(ROUND((A.this_ad_price-B.last_ad_price)/B.last_ad_price*100,2),'%'),0)  AS rise_or_fall_ad FROM
    (SELECT COALESCE(SUM(price),0) this_ad_price FROM tf_ad_income WHERE TO_DAYS(NOW()) - TO_DAYS(create_date) = 0) A,
    (SELECT COALESCE(SUM(price),0) last_ad_price FROM tf_ad_income WHERE TO_DAYS(NOW()) - TO_DAYS(create_date) = 1 )B
  </select>

  <select id="getWeekCountData" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
          COALESCE (A.price, 0) this_price,
          COALESCE (B.price, 0) upper_price
        FROM
          (SELECT
            SUM(price) AS price
          FROM
            `tf_ad_income`
          WHERE YEARWEEK(create_date, 1) = YEARWEEK(NOW(), 1) - 1) A,
          (SELECT
            SUM(price) AS price
          FROM
            `tf_ad_income`
          WHERE YEARWEEK(create_date, 1) = YEARWEEK(NOW(), 2) - 1) B
  </select>

  <select id="getWeekData" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    SELECT (
        CASE (DAYOFWEEK(A.weeks) - 1)
        WHEN 1 THEN
            '星期一'
        WHEN 2 THEN
            '星期二'
        WHEN 3 THEN
            '星期三'
       WHEN 4 THEN
            '星期四'
       WHEN 5 THEN
            '星期五'
       WHEN 6 THEN
            '星期六'
       WHEN 0 THEN
            '星期日'
        END
    ) AS week, A.weeks, COALESCE( B.count_price,0) count_price  FROM (
    SELECT  DATE_SUB( DATE_SUB(CURDATE(), INTERVAL WEEKDAY(CURDATE()) DAY), INTERVAL #{week} WEEK) AS weeks
    UNION
    SELECT  DATE_ADD(DATE_SUB( DATE_SUB(CURDATE(), INTERVAL WEEKDAY(CURDATE()) DAY), INTERVAL #{week} WEEK), INTERVAL 1 DAY) AS weeks
    UNION
    SELECT  DATE_ADD(DATE_SUB( DATE_SUB(CURDATE(), INTERVAL WEEKDAY(CURDATE()) DAY), INTERVAL #{week} WEEK), INTERVAL 2 DAY) AS weeks
    UNION
    SELECT  DATE_ADD(DATE_SUB( DATE_SUB(CURDATE(), INTERVAL WEEKDAY(CURDATE()) DAY), INTERVAL #{week} WEEK), INTERVAL 3 DAY) AS weeks
    UNION
    SELECT  DATE_ADD(DATE_SUB( DATE_SUB(CURDATE(), INTERVAL WEEKDAY(CURDATE()) DAY), INTERVAL #{week} WEEK), INTERVAL 4 DAY) AS weeks
    UNION
    SELECT  DATE_ADD(DATE_SUB( DATE_SUB(CURDATE(), INTERVAL WEEKDAY(CURDATE()) DAY), INTERVAL #{week} WEEK), INTERVAL 5 DAY) AS weeks
    UNION
    SELECT  DATE_ADD(DATE_SUB( DATE_SUB(CURDATE(), INTERVAL WEEKDAY(CURDATE()) DAY), INTERVAL #{week} WEEK), INTERVAL 6 DAY) AS weeks
    ) A LEFT JOIN (SELECT
        DATE_FORMAT(create_date,'%Y-%m-%d') create_date ,SUM(price) AS count_price
    FROM `tf_ad_income`
    WHERE YEARWEEK(create_date,1) = YEARWEEK(NOW(),#{week})-1
    GROUP BY DATE_FORMAT(create_date,'%Y-%m-%d')) B ON A.weeks = B.create_date ORDER BY A.weeks
  </select>

  <select id="getMonthData" parameterType="java.util.HashMap" resultType="java.util.HashMap">
            SELECT
          A.mon,
          COALESCE(B.price, 0) ad_price ,COALESCE(C.price, 0) product_price
        FROM
          (SELECT
            DATE_FORMAT(CURDATE(), '%Y-%m') AS `mon`
          UNION
          SELECT
            DATE_FORMAT((CURDATE() - INTERVAL 1 MONTH), '%Y-%m') AS `mon`
          UNION
          SELECT
            DATE_FORMAT((CURDATE() - INTERVAL 2 MONTH), '%Y-%m') AS `mon`
          UNION
          SELECT
            DATE_FORMAT((CURDATE() - INTERVAL 3 MONTH), '%Y-%m') AS `mon`
          UNION
          SELECT
            DATE_FORMAT((CURDATE() - INTERVAL 4 MONTH), '%Y-%m') AS `mon`
          UNION
          SELECT
            DATE_FORMAT((CURDATE() - INTERVAL 5 MONTH), '%Y-%m') AS `mon`
          UNION
          SELECT
            DATE_FORMAT((CURDATE() - INTERVAL 6 MONTH), '%Y-%m') AS `mon`
          UNION
          SELECT
            DATE_FORMAT((CURDATE() - INTERVAL 7 MONTH), '%Y-%m') AS `mon`
          UNION
          SELECT
            DATE_FORMAT((CURDATE() - INTERVAL 8 MONTH), '%Y-%m') AS `mon`
          UNION
          SELECT
            DATE_FORMAT((CURDATE() - INTERVAL 9 MONTH), '%Y-%m') AS `mon`
          UNION
          SELECT
            DATE_FORMAT(
              (CURDATE() - INTERVAL 10 MONTH),
              '%Y-%m'
            ) AS `mon`
          UNION
          SELECT
            DATE_FORMAT(
              (CURDATE() - INTERVAL 11 MONTH),
              '%Y-%m'
            ) AS `mon`) A
          LEFT JOIN
            (SELECT
              DATE_FORMAT(create_date, '%Y-%m') AS TIME,
              SUM(price) price
            FROM
              `tf_ad_income`
            GROUP BY TIME) B
            ON A.mon = B.time LEFT JOIN (SELECT
              DATE_FORMAT(paid_date, '%Y-%m') AS TIME,
              SUM(amount_paid) price
            FROM
              `tf_order`
            WHERE payment_status = 2
            GROUP BY TIME) C ON A.mon = C.time
        ORDER BY A.mon
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tf_ad_income
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.tongfu.entity.AdIncome" >
    insert into tf_ad_income (id, create_date, price,
      ad_id)
    values (#{id,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, #{price,jdbcType=DECIMAL},
      #{adId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.tongfu.entity.AdIncome" >
    insert into tf_ad_income
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="adId != null" >
        ad_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="adId != null" >
        #{adId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tongfu.entity.AdIncome" >
    update tf_ad_income
    <set >
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="adId != null" >
        ad_id = #{adId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tongfu.entity.AdIncome" >
    update tf_ad_income
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      price = #{price,jdbcType=DECIMAL},
      ad_id = #{adId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>